<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.youyi.user_management_back.mapper.FriendMapper">

    <resultMap id="BaseResultMap" type="com.youyi.user_management_back.model.domain.Friend">
            <id property="id" column="id" jdbcType="BIGINT"/>
            <result property="userId" column="userId" jdbcType="BIGINT"/>
            <result property="friendId" column="friendId" jdbcType="BIGINT"/>
            <result property="friendAlias" column="friendAlias" jdbcType="VARCHAR"/>
            <result property="userAlias" column="userAlias" jdbcType="VARCHAR"/>
            <result property="reason" column="reason" jdbcType="VARCHAR"/>
            <result property="status" column="status" jdbcType="TINYINT"/>
            <result property="createTime" column="createTime" jdbcType="TIMESTAMP"/>
            <result property="updateTime" column="updateTime" jdbcType="TIMESTAMP"/>
            <result property="isDelete" column="isDelete" jdbcType="TINYINT"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,userId,friendId,
        friendAlias,userAlias,reason,
        status,createTime,updateTime,
        isDelete
    </sql>
    <insert id="applyFriend">
        INSERT INTO friend (userId,friendId,reason)
        VALUES (#{userId},#{friendId},#{reason})
    </insert>

    <select id="judgeFriend" resultType="java.lang.Integer">
        select count(*)
        from friend
        where (userId = #{userId} and friendId =  #{friendId})
        or (userId = #{friendId} and friendId = #{userId})
    </select>

    <select id="listMyFriend" resultType="java.lang.Integer">
        select friendId
        from friend where userId = #{loginUserId} and status = 1
        union
        select userId
        from friend where friendId = #{loginUserId} and status = 1;
    </select>


</mapper>
